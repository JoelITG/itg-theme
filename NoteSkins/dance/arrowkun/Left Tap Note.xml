<ActorFrame InitCommand="%function (self) self:SetDrawByZPosition(true); end"><children>
<Actor
	File="_shadow"
	InitCommand="queuecommand,Update"
	UpdateCommand="%function (self)
	
		if( noteskin_x_0 )then
			self:x(noteskin_x_0);
		end
		if( noteskin_y_0 )then
			self:y(noteskin_y_0);
		end
		
		if( noteskin_zoom_0 )then
			self:zoom(noteskin_zoom_0);
		end
		if( noteskin_zoomx_0 )then
			self:zoomx(noteskin_zoomx_0);
		end
		if( noteskin_zoomy_0 )then
			self:zoomy(noteskin_zoomy_0);
		end
		if( noteskin_zoomtowidth_0 )then
			self:zoomtowidth(noteskin_zoomtowidth_0);
		end
		if( noteskin_zoomtoheight_0 )then
			self:zoomtoheight(noteskin_zoomtoheight_0);
		end
		
		if( noteskin_effect_0 == 'bob' )then
			if noteskin_effectsets_0 == false then
				self:bob();
				if noteskin_effectcontrol_0 then
					self:effectmagnitude(noteskin_effectcontrol_0[1],noteskin_effectcontrol_0[2],noteskin_effectcontrol_0[3]);
					self:effectperiod(noteskin_effectcontrol_0[4]);
					self:effectclock(noteskin_effectcontrol_0[5]);
				end
				noteskin_effectsets_0 = true;
			end
		else
			self:stopeffect();
		end
		
		self:queuecommand('Update2');
	end"
	Update2Command="sleep,0.0333;queuecommand,Update"
/>
<Actor
	File="_arrowkun 6x1"
	InitCommand="queuecommand,Update"
	UpdateCommand="%function (self)
	
		self:animate(0);
		
		if( noteskin_frame_0 )then
			self:setstate( noteskin_frame_0 );
		else
			self:setstate( 0 );
		end
	
		--this is a framework for a noteskin to accept lua :V
		
		if( noteskin_rotationx_0 )then
			self:rotationx(noteskin_rotationx_0);
		end
		if( noteskin_rotationy_0 )then
			self:rotationy(noteskin_rotationy_0);
		end
		if( noteskin_rotationz_0 )then
			self:rotationz(noteskin_rotationz_0+90);
		end
		
		if( noteskin_x_0 )then
			self:x(noteskin_x_0);
		end
		if( noteskin_y_0 )then
			self:y(noteskin_y_0);
		end
		if( noteskin_z_0 )then
			self:z(noteskin_z_0);
		end
		
		if( noteskin_zoom_0 )then
			self:zoom(noteskin_zoom_0);
		end
		if( noteskin_zoomx_0 )then
			self:zoomx(noteskin_zoomx_0);
		end
		if( noteskin_zoomy_0 )then
			self:zoomy(noteskin_zoomy_0);
		end
		if( noteskin_zoomtowidth_0 )then
			self:zoomtowidth(noteskin_zoomtowidth_0);
		end
		if( noteskin_zoomtoheight_0 )then
			self:zoomtoheight(noteskin_zoomtoheight_0);
		end
		
		if( noteskin_tint_0 )then
			self:diffuse(noteskin_tint_0[1],noteskin_tint_0[2],noteskin_tint_0[3],noteskin_tint_0[4]);
		end
		if( noteskin_fade_0 )then
			self:diffusealpha(noteskin_fade_0);
		end
		
		if( noteskin_effect_0 )then
			if noteskin_effectset_0 == false then
				if noteskin_effect_0 == 'wag' then
					self:wag();
				end
				if noteskin_effect_0 == 'vibrate' then
					self:vibrate();
				end
				if noteskin_effect_0 == 'spin' then
					self:spin();
				end
				if noteskin_effect_0 == 'pulse' then
					self:pulse();
				end
				if noteskin_effect_0 == 'bob' then
					self:bob();
				end
				if noteskin_effect_0 == 'bounce' then
					self:bounce();
				end
				if noteskin_effectcontrol_0 then
					self:effectmagnitude(noteskin_effectcontrol_0[1],noteskin_effectcontrol_0[2],noteskin_effectcontrol_0[3]);
					self:effectperiod(noteskin_effectcontrol_0[4]);
					self:effectclock(noteskin_effectcontrol_0[5]);
				end
				noteskin_effectset_0 = true;
			end
		else
			self:stopeffect();
		end
		
		self:queuecommand('Update2');
	end"
	Update2Command="sleep,0.0333;queuecommand,Update"
/>
</children></ActorFrame>